%dev.quarkus.http.port=8890
%dev.quarkus.http.host=0.0.0.0
quarkus.http.port=8080

my.hostname=localhost
%prod.kafka.bootstrap.servers=kafka:9092
%dev.kafka.bootstrap.servers=localhost:9092
%prod.quarkus.kafka-streams.bootstrap-servers=kafka:9092
%dev.quarkus.kafka-streams.bootstrap-servers=localhost:9092

quarkus.kafka-streams.application-server=localhost:8080
%dev.quarkus.kafka-streams.application-server=localhost:8890

quarkus.devservices.enabled=false

quarkus.kafka-streams.application-id=lowercase-data
quarkus.kafka-streams.topics=attributes,data,test-data

#group.max.session.timeout.ms -> defaults to 30s (genny docker has 60s)
#group.min.session.timeout.ms -> defaults to 6 s (genny docker has 6s)
#group.max.session.timeout.ms in the server.properties > session.timeout.ms in the consumer.properties.
#group.min.session.timeout.ms in the server.properties < session.timeout.ms in the consumer.properties.
#request.timeout.ms > session.timeout.ms + fetch.wait.max.ms
#(session.timeout.ms)/3 > heartbeat.interval.ms
#session.timeout.ms > Worst case processing time of Consumer Records per consumer poll(ms).
# should set enable.auto.offset.store=false 
#max.poll.interval.ms (default to 5m - 300000ms)
kafka-streams.consumer.session.timeout.ms=10000   
kafka-streams.consumer.heartbeat.interval.ms=200

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG

# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores

mp.messaging.outgoing.test-data.connector=smallrye-kafka
mp.messaging.outgoing.test-data.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.test-data.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.attributes.connector=smallrye-kafka
mp.messaging.outgoing.attributes.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.attributes.value.serializer=org.apache.kafka.common.serialization.StringSerializer

quarkus.container-image.group=gennyproject
quarkus.container-image.name=lauchy
